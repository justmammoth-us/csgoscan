name: Docker Image CI

on:
  release:
    types: [published]

env:
  VERSION: ${{ github.ref_name }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - name: Build and push as latest
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.REGISTRY_URL }}/csgoscan:latest
      - name: Build and push as ${{ env.version }}
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.REGISTRY_URL }}/csgoscan:${{ env.version }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:
      - uses: octokit/request-action@v2
        with:
          route: GET /repos/{owner}/{repo}/actions/workflows/{workflow}/dispatches
          owner: felixcapuano
          repo: server-deployment
          workflow: stack_deployment.yml
          body: |
            {
                "ref": "main",
                "inputs": {
                    "name": "csgoscan",
                    "repository": "felixcapuano/csgoscan",
                    "branch": "main",
                    "file": "docker-compose.yml",
                    "environment": "IMAGE_VERSION=${{ env.VERSION }}\nSTEAM_API_KEY=${{ secrets.STEAM_API_KEY }}\nFACEIT_API_KEY=${{ secrets.FACEIT_API_KEY }}"
                }
            }
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }}
